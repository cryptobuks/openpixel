<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Search in ledger</title>
    <link rel="stylesheet" type="text/css" href="https://bootswatch.com/flatly/bootstrap.min.css">
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.0/jquery.min.js"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js"></script>
</head>

<body>
    <div class="container">
        <div class="col-md6 col-md-offset3">
            <br/>
            <form id="query" role="form" class="form-horizontal border">
                <legend>Search files in ledger</legend>
                <hr/>
                <input type="hidden" id="tzoffset" name="tzoffset">

                <div class="form-group">
                    <div class="col-sm-1"></div>
                    <label class="col-sm-1 control-label" for="hostname">Hostname</label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control small" id="hostname" name="hostname" autofocus="autofocus"
                            placeholder="ex. `www.google.com` or leave blank to query all">
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-1"></div>
                    <label class="col-sm-1 control-label" for="date_from_year">From<br><sub class="gmt"></sub></label>
                    <div class="col-sm-2">
                        <select class="form-control year" title="Year" id="date_from_year" name="date_from[year]">
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <select class="form-control month" title="Month" id="date_from_month" name="date_from[month]">
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <select class="form-control date" title="Day" id="date_from_date" name="date_from[date]">
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <select class="form-control hour" title="Hour" id="date_from_hour" name="date_from[hour]">
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-1"></div>
                    <label class="col-sm-1 control-label" for="date_to_year">To<br><sub class="gmt"></sub></label>
                    <div class="col-sm-2">
                        <select class="form-control year" title="Year" id="date_to_year" name="date_to[year]">
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <select class="form-control month" title="Month" id="date_to_month" name="date_to[month]">
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <select class="form-control date" title="Day" id="date_to_date" name="date_to[date]">
                        </select>
                    </div>
                    <div class="col-sm-2">
                        <select class="form-control hour" title="Hour" id="date_to_hour" name="date_to[hour]">
                        </select>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-2">
                        <button id="submit" type="submit" class="btn btn-primary">
                            <span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Submit
                        </button>
                    </div>
                </div>
            </form>
        </div>
        <hr/>
        <div id="resp" class="col-md6 col-md-offset3">
            <div id="success" style="display:none;" class="alert fade in" role=alert>
                Request completed, returned <b><span id="success-msg"></span></b> row(s)
            </div>
            <div id="error" style="display:none;" class="alert alert-dismissible fade in" role=alert>
                Error occured <span id="error-msg"></span>
            </div>
            <table id="results" style="display:none;" class="table table-hover">
            </table>
        </div>

        <div id="pages" style="display:none;" class="text-center">
            <ul class="pagination">
                <li><button type="button" class="btn btn-primary btn-sm" id="first-page" title="First page"><i class="glyphicon glyphicon-fast-backward"></i></button></li>
                <li><button type="button" class="btn btn-primary btn-sm" id="prev-page" title="Previous page"><i class="glyphicon glyphicon-chevron-left"></i></button></li>
                <li>&nbsp;Page <i><span id="page"></span></i> of <i><span id="max_pages"></span></i>&nbsp;</li>
                <li><button type="button" class="btn btn-primary btn-sm" id="next-page" title="Next page"><i class="glyphicon glyphicon-chevron-right"></i></button></li>
                <li><button type="button" class="btn btn-primary btn-sm" id="last-page" title="Last page"><i class="glyphicon glyphicon-fast-forward"></i></button></li>
            </ul>
        </div>
    </div>

    <script type="text/javascript">
        function twoDigits(x) {
            return (x < 10 ? '0' : '') + x;
        }

        function option(value, selectedif, displayed) {
            return ('<option value="' + value + '"' + (selectedif ? ' selected="selected"' : '') + '>' + displayed +
                '</option>');
        }

        $(function () {
            $('#results').on('click', '.clickable-row', function (event) {
                if ($(this).hasClass('active')) {
                    $(this).removeClass('active');
                }
                else {
                    $(this).addClass('active').siblings().removeClass('active');
                }
            });

            var now = new Date();
            var gmt_str = '';
            var tzoffset_min;
            var page = 1;
            var rows_count = 0;
            var max_pages = 1;
            the_data = null;

            (function () {
                // years
                var years = [];
                for (var year = 1900 + now.getYear(); year >= 2016; year--) {
                    years.push(year);
                }
                $('select.year').html(years.map(function (y) {
                    return option(y, false, y);
                }).join(''));
            })();

            (function () {
                // months
                var months_names = ['January', 'February', 'March', 'April', 'May', 'June',
                                    'July', 'August', 'September', 'October', 'November', 'December'];
                var months = [];
                for (var month = 1; month <= 12; month++) {
                    months.push(month);
                }
                $('select.month').html(months.map(function (m) {
                    return option(twoDigits(m), m === now.getMonth()+1, months_names[m-1]);
                }));
            })();

            (function () {
                // dates
                var dates = [];
                for (var date = 1; date <= 31; date++) {
                    dates.push(date);
                }
                $('select.date').html(dates.map(function (d) {
                    return option(twoDigits(d), d === now.getDate(), d);
                }));
            })();

            (function () {
                // hours
                var hours = [];
                for (var hour = 0; hour <= 23; hour++) {
                    hours.push(hour);
                }
                $('select.hour').html(hours.map(function (h) {
                    return option(twoDigits(h), h === now.getHours() - 1, h); // select previous hour by default
                }));
            })();

            (function () {
                // tz
                var tzoffset = now.getTimezoneOffset();
                tzoffset_min = tzoffset;
                $('#tzoffset').val(tzoffset);
                var offsetH = Math.floor(Math.abs(tzoffset)/60);
                var offsetM = Math.abs(tzoffset) - offsetH*60;
                gmt_str = 'GMT' + (tzoffset > 0 ? '-' : '+') + twoDigits(offsetH) + ':' + twoDigits(offsetM);
                $('.gmt').html(gmt_str);
            })();

            function show_pages() {
                if (page === 1) {
                    $('#prev-page').prop('disabled', true);
                    $('#first-page').prop('disabled', true);
                }
                else {
                    $('#prev-page').prop('disabled', false);
                    $('#first-page').prop('disabled', false);
                }

                if (max_pages != null && page === max_pages) {
                    $('#next-page').prop('disabled', true);
                    $('#last-page').prop('disabled', true);
                }
                else {
                    $('#next-page').prop('disabled', false);
                    $('#last-page').prop('disabled', false);
                }

                $('#pages').show();
            }

            function get_data() {
                if (the_data) {
                    the_data._page = page;
                }
                else {
                    var data = {};
                    data._page = page;
                    data.hostname = $('#hostname').val();

                    (function () {
                        var tzoffset = $('#tzoffset').val();
                        var date_from = new Date(
                            $('#date_from_year').val() + '-' +
                            $('#date_from_month').val() + '-' +
                            $('#date_from_date').val() + 'T' +
                            $('#date_from_hour').val() + ':00:00.000Z'
                        );
                        var date_to = new Date(
                            $('#date_to_year').val() + '-' +
                            $('#date_to_month').val() + '-' +
                            $('#date_to_date').val() + 'T' +
                            $('#date_to_hour').val() + ':00:00.000Z'
                        );
                        data.date_from = (new Date(Number(date_from) + Number(tzoffset)*60*1000)).toISOString();
                        data.date_to = (new Date(Number(date_to) + Number(tzoffset)*60*1000)).toISOString();
                    })();

                    the_data = data;
                }
                return the_data;
            }

            function get_count(done) {
                var data = get_data();
                console.log('Counting: ' + JSON.stringify(data));
                $.post('<%= config.web_ui.base_path %>/ledger/count', data, function (a, b, c) {
                    var resp = (c && c.responseJSON) ? c.responseJSON : { err: 'Something went wrong' };

                    if (resp.err) {
                        console.log('Error counting: ', resp.err);
                        rows_count = null;
                        max_pages = null;
                        $('#success-msg').text('?');
                        $('#max_pages').text('?');
                        return done();
                    }

                    rows_count = parseInt(resp.results[0].count);
                    if (rows_count === 0) {
                        max_pages = 1;
                    }
                    <% if (config.web_ui.page_size != null) { -%>
                    else {
                        max_pages = Math.ceil(rows_count/<%= config.web_ui.page_size %>);
                    }
                    <% } %>
                    $('#max_pages').text(max_pages);
                    $('#success-msg').text(rows_count);
                    done();
                });
            }

            function get_results() {
                var data = get_data();
                console.log('Searching: ' + JSON.stringify(data));

                $('#error').hide();
                $('#success').hide();
                $('#results').hide();
                $('#pages').hide();

                $.post('<%= config.web_ui.base_path %>/ledger', data, function (a, b, c) {
                    $('#submit').prop('disabled', false);
                    var resp = (c && c.responseJSON) ? c.responseJSON : { err: 'Something went wrong' };

                    if (resp.err) {
                        $('#error').removeClass('alert-success').addClass('alert-danger').show();
                        $('#error-msg').html('' + resp.err);
                        return;
                    }

                    var rows = resp.results;
                    $('#success').removeClass('alert-danger').addClass('alert-success').show();
                    //$('#success-msg').html('' + rows.length);

                    var expected_columns = [
                        'pstart',
                        'hostname',
                        'txid'
                    ];
                    var displayed_columns = [
                        'Time (' + gmt_str + ')',
                        'Hostname',
                        'txid'
                    ];
                    var transformations = [
                        function (v) {
                            var t = new Date(v.split('-').join('/').split('T').join(' ') + ':00:00.000Z');
                            t = new Date(Number(t) - tzoffset_min*60*1000);
                            return t.toISOString().substr(0,13).split('-').join('/').split('T').join(' ') + ':00';
                        },
                        function (v) { return v === '_no_referer_' ? 'UNKNOWN' : v; },
                        function (v) { return v; }
                    ];
                    var tjson = [];

                    var table = $('#results');
                    table.html('');
                    if (rows.length > 0) {
                        // thead
                        var columns = Object.keys(rows[0]);
                        var column_ids = [];
                        for (var i = 0 ; i < expected_columns.length; i++) {
                            if (columns.indexOf(expected_columns[i]) >= 0) {
                                column_ids.push(i);
                            }
                        }
                        var thead = $('<thead></thead>');
                        thead.append($('<tr></tr>'));
                        for (var i = 0; i < column_ids.length; i++) {
                            var dcn = displayed_columns[column_ids[i]];
                            thead.find('tr').append($('<th></th>').text(dcn));
                        }
                        thead.find('tr').append($('<th></th>').text('Actions'));
                        table.append(thead);
                        // tbody
                        var tbody = $('<tbody></tbody');
                        //// main columns
                        for (var j = 0; j < rows.length; j++) {
                            var tr = $('<tr></tr>').addClass('clickable-row');
                            for (var i = 0; i < column_ids.length; i++) {
                                var dcn = displayed_columns[column_ids[i]];
                                var dv = transformations[column_ids[i]](rows[j][expected_columns[column_ids[i]]]);
                                var rjson = {};
                                rjson[dcn] = dv;
                                if (expected_columns[column_ids[i]] === 'txid') {
                                    if (dv && dv !== 'null') {
                                        tr.append($('<td></td>').html('<code>' + dv + '</code>'));
                                    }
                                    else {
                                        tr.append($('<td></td>').html('<i>Transaction not completed</i>'));
                                    }
                                }
                                else {
                                    tr.append($('<td></td>').text(dv));
                                }
                                tjson.push(rjson);
                            }
                            //// buttons
                            if (rows[j].txid) {
                                tr.append($('<td></td>')
                                    .append($('<div></div>').addClass('btn-group').attr('role', 'group')
                                        .append($('<a></a>')
                                            .addClass('btn')
                                            .addClass('btn-sm')
                                            .addClass('btn-warning')
                                            .attr('role', 'button')
                                            .attr('href', 'https://www.blocktrail.com/BTC/tx/' + rows[j].txid)
                                            .attr('title', 'Show transaction details')
                                            .attr('target', '_blank')
                                            .html('<span class="glyphicon glyphicon-btc" aria-hidden="true"></span>')
                                        )
                                        .append($('<a></a>')
                                            .addClass('btn')
                                            .addClass('btn-sm')
                                            .addClass('btn-success')
                                            .attr('role', 'button')
                                            .attr('href', 'ledger/dlf?id=' + rows[j].id)
                                            .attr('title', 'Download log')
                                            .attr('target', '_blank')
                                            .html('<span class="glyphicon glyphicon-save-file" aria-hidden="true"></span>')
                                        )
                                        .append($('<a></a>')
                                            .addClass('btn')
                                            .addClass('btn-sm')
                                            .addClass('btn-primary')
                                            .attr('role', 'button')
                                            .attr('href', 'ledger/dcf?id=' + rows[j].id)
                                            .attr('title', 'Download counters')
                                            .attr('target', '_blank')
                                            .html('<span class="glyphicon glyphicon-sort-by-order-alt" aria-hidden="true"></span>')
                                        )
                                    )
                                );
                            }
                            else {
                                tr.append( $('<td></td>').html('') );
                            }
                            tbody.append(tr);
                        }
                        table.append(tbody);
                    }
                    $('#results').show();
                    $('#page').text(page);
                    show_pages();

                    $('html, body').animate({
                        scrollTop: $("#results").offset().top
                    }, 500);
                });
            }

            $('#query').on('submit', function (event) {
                event.preventDefault();
                $('#submit').prop('disabled', true);

                $('#error').hide();
                $('#success').hide();
                $('#results').hide();
                $('#pages').hide();
                page = 1;
                rows_count = 0;
                max_pages = 1;
                the_data = null;

                get_count(function () {
                    get_results();
                });
            });

            $('#prev-page').on('click', function (event) {
                event.preventDefault();
                if (page == 1) {
                    return;
                }
                page = page - 1;
                get_results();
            });

            $('#next-page').on('click', function (event) {
                event.preventDefault();
                page = page + 1;
                get_results();
            });

            $('#first-page').on('click', function (event) {
                event.preventDefault();
                page = 1;
                get_results();
            });

            $('#last-page').on('click', function (event) {
                event.preventDefault();
                page = max_pages;
                get_results();
            });
        });
    </script>
</body>
</html>
